#version 460

layout(local_size_x_id = 0, local_size_y_id = 1, local_size_z_id = 2) in;

layout (push_constant) uniform mypc_t {
    int fromX, fromY;
    int toX, toY;
} mypc;

layout (set = 0, binding = 0, rgba8) uniform image2D blurredImage;
layout (set = 0, binding = 1, rgba8) uniform image2D normalImage;
layout (set = 0, binding = 2, rgba8) uniform image2D depthImage;

void main() {
    const uint blurSize = 3;
    const uint sourceX = gl_GlobalInvocationID.x * blurSize + mypc.fromX;
    const uint sourceY = gl_GlobalInvocationID.y * blurSize + mypc.fromY;
    const uint destX = gl_GlobalInvocationID.x + mypc.toX;
    const uint destY = gl_GlobalInvocationID.y + mypc.toY;

    vec4 blurredColour = vec4(0);
    for (int i = 0; i < blurSize; i++) {
        for (int j = 0; j < blurSize; j++) {
            blurredColour += vec4(imageLoad(blurredImage, ivec2(sourceX + i, sourceY + j)));
        }
    }
    blurredColour /= blurSize * blurSize;
	imageStore(blurredImage, ivec2(destX, destY), blurredColour);

    vec4 normal = vec4(imageLoad(normalImage, ivec2(sourceX + blurSize / 2, sourceY + blurSize / 2)));
	imageStore(normalImage, ivec2(destX, destY), normal);

    vec4 depth = vec4(imageLoad(depthImage, ivec2(sourceX + blurSize / 2, sourceY + blurSize / 2)));
	imageStore(depthImage, ivec2(destX, destY), depth);
}